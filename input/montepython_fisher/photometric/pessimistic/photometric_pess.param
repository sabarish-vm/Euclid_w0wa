#------Experiments to test (separated with commas)-----

data.experiments=['euclid_photometric_z']

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'

####### sigma from MCMC #######

# Cosmological parameter list
#data.parameters['wa_fld']          = [ 0.,     -1.0,   1.0,  1.8023e-01,    1, 'cosmo']
#data.parameters['w0_fld']          = [-1.,     -1.5,  -0.5,  4.4897e-02,    1, 'cosmo']
#data.parameters['Omega_b']         = [0.05,     0.005, 1.,   2.6400e-03,   1, 'cosmo']
#data.parameters['h']               = [0.67,     0.1,   1.5,  2.0915e-02,    1, 'cosmo']
#data.parameters['n_s']             = [0.96,     0.8,   1.2,  1.0592e-02,    1, 'cosmo']
#data.parameters['sigma8']          = [0.815584, 0.7,   0.9,  4.3650e-03,   1, 'cosmo']
#data.parameters['N_eff_camb']      = [3.046,    0.,    6,    0.0,      1, 'cosmo']
#data.parameters['m_nu_camb']       = [0.06,     0.,    1,    0.0,      1, 'cosmo']
#data.parameters['Omega_m_camb']    = [0.32,     0.005, 1,    3.7657e-03,   1, 'cosmo']

#data.parameters['bias_1']	   = [1.0998,  None, None,   7.7774e-03,  1,  'nuisance']
#data.parameters['bias_2']	   = [1.2202,  None, None,   9.0148e-03,  1,  'nuisance']
#data.parameters['bias_3']	   = [1.2724,  None, None,   9.7629e-03,  1,  'nuisance']
#data.parameters['bias_4']	   = [1.3166,  None, None,   1.0472e-02,  1,  'nuisance']
#data.parameters['bias_5']	   = [1.3581,  None, None,   1.1274e-02,  1,  'nuisance']
#data.parameters['bias_6']	   = [1.3998,  None, None,   1.1680e-02,  1,  'nuisance']
#data.parameters['bias_7']	   = [1.4446,  None, None,   1.2810e-02,  1,  'nuisance']
#data.parameters['bias_8']	   = [1.4965,  None, None,   1.3146e-02,  1,  'nuisance']
#data.parameters['bias_9']	   = [1.5652,  None, None,   1.3971e-02,  1,  'nuisance']
#data.parameters['bias_10']	   = [1.743,   None, None,   1.6291e-02,  1,  'nuisance']

#data.parameters['aIA']             = [1.72,      0,     12.1,  1.8238e-01,  1, 'nuisance']
#data.parameters['etaIA']           = [-0.41,    -7.0,    6.17, 1.1086e-01,    1, 'nuisance']
#data.parameters['betaIA']          = [2.17,      0.63,   5.0,  0.,      1, 'nuisance']

####### 0.1*sigma from MCMC #######

# Cosmological parameter list
data.parameters['wa_fld']          = [ 0.,     -1.0,   1.0,  1.8023e-02,    1, 'cosmo']
data.parameters['w0_fld']          = [-1.,     -1.5,  -0.5,  4.4897e-03,    1, 'cosmo']
data.parameters['Omega_b']         = [0.05,     0.005, 1.,   2.6400e-04,   1, 'cosmo']
data.parameters['h']               = [0.67,     0.1,   1.5,  2.0915e-03,    1, 'cosmo']
data.parameters['n_s']             = [0.96,     0.8,   1.2,  1.0592e-03,    1, 'cosmo']
data.parameters['sigma8']          = [0.815584, 0.7,   0.9,  4.3650e-04,   1, 'cosmo']
data.parameters['N_eff_camb']      = [3.046,    0.,    6,    0.0,      1, 'cosmo']
data.parameters['m_nu_camb']       = [0.06,     0.,    1,    0.0,      1, 'cosmo']
data.parameters['Omega_m_camb']    = [0.32,     0.005, 1,    3.7657e-04,   1, 'cosmo']

data.parameters['bias_1']	   = [1.0998,  None, None,   7.7774e-04,  1,  'nuisance']
data.parameters['bias_2']	   = [1.2202,  None, None,   9.0148e-04,  1,  'nuisance']
data.parameters['bias_3']	   = [1.2724,  None, None,   9.7629e-04,  1,  'nuisance']
data.parameters['bias_4']	   = [1.3166,  None, None,   1.0472e-03,  1,  'nuisance']
data.parameters['bias_5']	   = [1.3581,  None, None,   1.1274e-03,  1,  'nuisance']
data.parameters['bias_6']	   = [1.3998,  None, None,   1.1680e-03,  1,  'nuisance']
data.parameters['bias_7']	   = [1.4446,  None, None,   1.2810e-03,  1,  'nuisance']
data.parameters['bias_8']	   = [1.4965,  None, None,   1.3146e-03,  1,  'nuisance']
data.parameters['bias_9']	   = [1.5652,  None, None,   1.3971e-03,  1,  'nuisance']
data.parameters['bias_10']	   = [1.743,   None, None,   1.6291e-03,  1,  'nuisance']

data.parameters['aIA']             = [1.72,      0,     12.1,  1.8238e-02,  1, 'nuisance']
data.parameters['etaIA']           = [-0.41,    -7.0,    6.17, 1.1086e-02,    1, 'nuisance']
data.parameters['betaIA']          = [2.17,      0.63,   5.0,  0.,      1, 'nuisance']

###########################

# Fixed parameter list
data.cosmo_arguments['T_ncdm'] = 2.7255
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['YHe'] = 0.2454006
data.cosmo_arguments['reio_parametrization'] = 'reio_none'
data.cosmo_arguments['Omega_Lambda'] = 0.0

# precision parameters
data.cosmo_arguments['k_per_decade_for_pk'] = 50
data.cosmo_arguments['k_per_decade_for_bao'] = 50

data.cosmo_arguments['non linear'] = 'halofit'
data.cosmo_arguments['nonlinear_min_k_max'] = 80.
data.cosmo_arguments['halofit_min_k_nonlinear'] = 3.282e-3

# PHP settings (perturbation high precision)
data.cosmo_arguments['l_max_g'] = 20
data.cosmo_arguments['l_max_pol_g'] = 15
data.cosmo_arguments['radiation_streaming_approximation'] = 2
data.cosmo_arguments['radiation_streaming_trigger_tau_over_tau_k'] = 240.
data.cosmo_arguments['radiation_streaming_trigger_tau_c_over_tau'] = 100.
data.cosmo_arguments['tol_ncdm_synchronous'] = 1.e-5
data.cosmo_arguments['l_max_ncdm'] = 22
data.cosmo_arguments['ncdm_fluid_trigger_tau_over_tau_k'] = 41.

# ODEHP settings (ODE high precision)
data.cosmo_arguments['background_Nloga'] = 6000
data.cosmo_arguments['thermo_Nz_log'] = 20000
data.cosmo_arguments['thermo_Nz_lin'] = 40000
data.cosmo_arguments['tol_perturbations_integration'] = 1.e-6

# NLHP settings (non-linear high precision)
data.cosmo_arguments['halofit_tol_sigma'] = 1.e-8

#------ Mcmc parameters ----
# Number of steps taken, by default (overwritten by the -N command)
data.N=10
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step=5
