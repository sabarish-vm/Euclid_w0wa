#------Experiments to test (separated with commas)-----

data.experiments=['euclid_photometric_z']

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'

# Cosmological parameter list
data.parameters['wa_fld']          = [ 0.,     -1.0,   1.0,  0.0363,    1, 'cosmo']
data.parameters['w0_fld']          = [-1.,     -1.5,  -0.5,  0.0095,    1, 'cosmo']
data.parameters['Omega_b']         = [0.05,     0.005, 1.,   0.0007,   1, 'cosmo']
data.parameters['h']               = [0.67,     0.1,   1.5,  0.0044,    1, 'cosmo']
data.parameters['n_s']             = [0.96,     0.8,   1.2,  0.0012,    1, 'cosmo']
data.parameters['sigma8']          = [0.815584, 0.7,   0.9,  0.0006,   1, 'cosmo']
data.parameters['N_eff_camb']      = [3.046,    0.,    6,    0.0,      1, 'cosmo']
data.parameters['m_nu_camb']       = [0.06,     0.,    1,    0.0,      1, 'cosmo']
data.parameters['Omega_m_camb']    = [0.32,     0.005, 1,    0.0007,   1, 'cosmo']

# Nuisance parameter list
# Fiducial values are given by b=sqrt(1+\bar{z}) in each bin
# Arbitrary limits for faster convergence in MCMC
data.parameters['bias_1']	   = [1.0998,  None, None,   0.0008,  1,  'nuisance']
data.parameters['bias_2']	   = [1.2202,  None, None,   0.0011,  1,  'nuisance']
data.parameters['bias_3']	   = [1.2724,  None, None,   0.0013,  1,  'nuisance']
data.parameters['bias_4']	   = [1.3166,  None, None,   0.0014,  1,  'nuisance']
data.parameters['bias_5']	   = [1.3581,  None, None,   0.0016,  1,  'nuisance']
data.parameters['bias_6']	   = [1.3998,  None, None,   0.0017,  1,  'nuisance']
data.parameters['bias_7']	   = [1.4446,  None, None,   0.0019,  1,  'nuisance']
data.parameters['bias_8']	   = [1.4965,  None, None,   0.002,  1,  'nuisance']
data.parameters['bias_9']	   = [1.5652,  None, None,   0.0021,  1,  'nuisance']
data.parameters['bias_10']	 = [1.743,   None, None,   0.0024,  1,  'nuisance']

# limits of 3sigma (according to IST-opt), except a_IA!>0
# or fix to fiducial value by setting sigma to 0
data.parameters['aIA']             = [1.72,      0,     12.1,  0.0172,      1, 'nuisance']
data.parameters['etaIA']           = [-0.41,     -7.0,  6.17,  0.02,      1, 'nuisance']
data.parameters['betaIA']          = [2.17,      0.63,   5.0,  0.,      1, 'nuisance']

####### sigma/6 ########

# Cosmological parameter list
#data.parameters['wa_fld']          = [ 0.,     -0.1,   0.1,  0.0182,    1, 'cosmo']
#data.parameters['w0_fld']          = [-1.,     -1.5,  -0.5,  0.0048,    1, 'cosmo']
#data.parameters['Omega_b']         = [0.05,     0.005, 1.,   0.00035,   1, 'cosmo']
#data.parameters['h']               = [0.67,     0.1,   1.5,  0.0022,    1, 'cosmo']
#data.parameters['n_s']             = [0.96,     0.8,   1.2,  0.0006,    1, 'cosmo']
#data.parameters['sigma8']          = [0.815584, 0.7,   0.9,  0.0003,   1, 'cosmo']
#data.parameters['N_eff_camb']      = [3.046,    0.,    6,    0.0,      1, 'cosmo']
#data.parameters['m_nu_camb']       = [0.06,     0.,    1,    0.0,      1, 'cosmo']
#data.parameters['Omega_m_camb']    = [0.32,     0.005, 1,    0.00035,   1, 'cosmo']

# Nuisance parameter list
# Fiducial values are given by b=sqrt(1+\bar{z}) in each bin
# Arbitrary limits for faster convergence in MCMC
#data.parameters['bias_1']	   = [1.0998,  None, None,   0.00040,  1,  'nuisance']
#data.parameters['bias_2']	   = [1.2202,  None, None,   0.00055,  1,  'nuisance']
#data.parameters['bias_3']	   = [1.2724,  None, None,   0.00065,  1,  'nuisance']
#data.parameters['bias_4']	   = [1.3166,  None, None,   0.00070,  1,  'nuisance']
#data.parameters['bias_5']	   = [1.3581,  None, None,   0.00080,  1,  'nuisance']
#data.parameters['bias_6']	   = [1.3998,  None, None,   0.00085,  1,  'nuisance']
#data.parameters['bias_7']	   = [1.4446,  None, None,   0.00095,  1,  'nuisance']
#data.parameters['bias_8']	   = [1.4965,  None, None,   0.00100,  1,  'nuisance']
#data.parameters['bias_9']	   = [1.5652,  None, None,   0.00105,  1,  'nuisance']
#data.parameters['bias_10']	   = [1.743,   None, None,   0.00120,  1,  'nuisance']

# limits of 3sigma (according to IST-opt), except a_IA!>0
# or fix to fiducial value by setting sigma to 0
#data.parameters['aIA']             = [1.72,      0,     12.1,  0.0086,      1, 'nuisance']
#data.parameters['etaIA']           = [-0.41,     -7.0,  6.17,  0.01,      1, 'nuisance']
#data.parameters['betaIA']          = [2.17,      0.63,   5.0,  0.,      1, 'nuisance']

####### all fixed but w0,wa ########

# Cosmological parameter list
#data.parameters['wa_fld']          = [ 0.,     -0.1,   0.1,  0.0363,    1, 'cosmo']
#data.parameters['w0_fld']          = [-1.,     -1.5,  -0.5,  0.0095,    1, 'cosmo']
#data.parameters['Omega_b']         = [0.05,     0.005, 1.,   0.,        1, 'cosmo']
#data.parameters['h']               = [0.67,     0.1,   1.5,  0.,        1, 'cosmo']
#data.parameters['n_s']             = [0.96,     0.8,   1.2,  0.,        1, 'cosmo']
#data.parameters['sigma8']          = [0.815584, 0.7,   0.9,  0.,        1, 'cosmo']
#data.parameters['N_eff_camb']      = [3.046,    0.,    6,    0.,        1, 'cosmo']
#data.parameters['m_nu_camb']       = [0.06,     0.,    1,    0.,        1, 'cosmo']
#data.parameters['Omega_m_camb']    = [0.32,     0.005, 1,    0.,        1, 'cosmo']

# Nuisance parameter list
# Fiducial values are given by b=sqrt(1+\bar{z}) in each bin
# Arbitrary limits for faster convergence in MCMC
#data.parameters['bias_1']	   = [1.0998,  None, None,   0.0,    1,  'nuisance']
#data.parameters['bias_2']	   = [1.2202,  None, None,   0.0,    1,  'nuisance']
#data.parameters['bias_3']	   = [1.2724,  None, None,   0.0,    1,  'nuisance']
#data.parameters['bias_4']	   = [1.3166,  None, None,   0.0,    1,  'nuisance']
#data.parameters['bias_5']	   = [1.3581,  None, None,   0.0,    1,  'nuisance']
#data.parameters['bias_6']	   = [1.3998,  None, None,   0.0,    1,  'nuisance']
#data.parameters['bias_7']	   = [1.4446,  None, None,   0.0,    1,  'nuisance']
#data.parameters['bias_8']	   = [1.4965,  None, None,   0.0,    1,  'nuisance']
#data.parameters['bias_9']	   = [1.5652,  None, None,   0.0,    1,  'nuisance']
#data.parameters['bias_10']	   = [1.743,   None, None,   0.0,    1,  'nuisance']

# limits of 3sigma (according to IST-opt), except a_IA!>0
# or fix to fiducial value by setting sigma to 0
#data.parameters['aIA']             = [1.72,      0,     12.1,  0.0,      1, 'nuisance']
#data.parameters['etaIA']           = [-0.41,     -7.0,  6.17,  0.0,      1, 'nuisance']
#data.parameters['betaIA']          = [2.17,      0.63,   5.0,  0.0,      1, 'nuisance']

###########################

# Fixed parameter list
data.cosmo_arguments['T_ncdm'] = 2.7255
data.cosmo_arguments['N_ncdm'] = 1
data.cosmo_arguments['YHe'] = 0.2454006
data.cosmo_arguments['reio_parametrization'] = 'reio_none'
data.cosmo_arguments['Omega_Lambda'] = 0.0

# precision parameters
data.cosmo_arguments['k_per_decade_for_pk'] = 50
data.cosmo_arguments['k_per_decade_for_bao'] = 50

data.cosmo_arguments['non linear'] = 'halofit'
data.cosmo_arguments['nonlinear_min_k_max'] = 80.
data.cosmo_arguments['halofit_min_k_nonlinear'] = 3.282e-3

# HP settings
#data.cosmo_arguments['l_max_g'] = 20
#data.cosmo_arguments['l_max_pol_g'] = 15
#data.cosmo_arguments['radiation_streaming_approximation'] = 2
#data.cosmo_arguments['radiation_streaming_trigger_tau_over_tau_k'] = 240.
#data.cosmo_arguments['radiation_streaming_trigger_tau_c_over_tau'] = 100.
#data.cosmo_arguments['tol_ncdm_synchronous'] = 1.e-5
#data.cosmo_arguments['l_max_ncdm'] = 22
#data.cosmo_arguments['ncdm_fluid_trigger_tau_over_tau_k'] = 41.

# new HP settings
#data.cosmo_arguments['tol_ncdm_synchronous'] = 1.e-5
#data.cosmo_arguments['tol_ncdm_bg'] = 1.e-7
#data.cosmo_arguments['tol_perturbations_integration'] = 1.e-7
#data.cosmo_arguments['pk_eq_tol'] = 1.e-10

# tol HP (THP) settings that worked very well
#data.cosmo_arguments['tol_background_integration'] = 1.e-12
#data.cosmo_arguments['tol_thermo_integration'] = 1.0e-8
#data.cosmo_arguments['background_evolver'] = 0
#data.cosmo_arguments['tol_perturbations_integration'] = 1.e-6

# tol HP (THP2) settings
#data.cosmo_arguments['background_evolver'] = 0
#data.cosmo_arguments['tol_background_integration'] = 1.e-12

# tol HP (THP3) settings
data.cosmo_arguments['tol_perturbations_integration'] = 1.e-6

#------ Mcmc parameters ----
# Number of steps taken, by default (overwritten by the -N command)
data.N=10
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step=5
